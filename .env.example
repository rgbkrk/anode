# Anode Environment Configuration
# Copy this file to .env and fill in your values

# =============================================================================
# Core Services Configuration
# =============================================================================

# LiveStore Sync Backend URL
# Used by web client to connect to the sync backend
VITE_LIVESTORE_SYNC_URL=ws://localhost:8787

# Authentication token for sync backend
# Keep as default for local development
AUTH_TOKEN=insecure-token-change-me

# =============================================================================
# AI Integration (Optional)
# =============================================================================

# OpenAI API Key for AI cells
# Get your key from: https://platform.openai.com/api-keys
# If not set, AI cells will use mock responses.
# Comment out if you already have an API key set in your shell to reuse
# OPENAI_API_KEY=

# =============================================================================
# Development Settings
# =============================================================================

# NOTE: At this time, you should always launch a new notebook if starting the kernel over
# Use the suggested launch in the UI

# Kernel configuration options
# KERNEL_ID=kernel-dev
# INITIAL_SYNC_DELAY=2000

# =============================================================================
# Optional: Advanced Configuration
# =============================================================================

# LiveStore sync URL for kernel (usually same as VITE_LIVESTORE_SYNC_URL but without VITE_ prefix)
# LIVESTORE_SYNC_URL=ws://localhost:8787

# OpenAI Configuration (Advanced)
# OPENAI_BASE_URL=https://api.openai.com/v1
# OPENAI_ORGANIZATION=your-org-id

# =============================================================================
# Usage Instructions
# =============================================================================

# 1. Copy this file: cp .env.example .env
# 2. Add your OpenAI API key if you want real AI responses
# 3. Start development: pnpm dev
# 4. Start kernel: pnpm dev:kernel (uses NOTEBOOK_ID from this file)
# 5. Open http://localhost:5173

# For multiple notebooks, override NOTEBOOK_ID:
# NOTEBOOK_ID=my-specific-notebook pnpm dev:kernel
